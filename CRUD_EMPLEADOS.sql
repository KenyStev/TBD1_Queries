--------------------------------------------------------
--  DDL for Procedure SP_EMPLEADO_CREATE
--------------------------------------------------------
CREATE OR REPLACE PROCEDURE SP_EMPLEADO_CREATE 
(
  P_CODIGO_EMPLEADO IN EMPLEADO.CODIGO_EMPLEADO%TYPE 
, P_ID_USUARIO IN EMPLEADO.ID_USUARIO%TYPE 
, P_PRIMER_NOMBRE IN EMPLEADO.PRIMER_NOMBRE%TYPE 
, P_SEGUNDO_NOMBRE IN EMPLEADO.SEGUNDO_NOMBRE%TYPE 
, P_PRIMER_APELLIDO IN EMPLEADO.PRIMER_APELLIDO%TYPE 
, P_SEGUNDO_APELLIDO IN EMPLEADO.SEGUNDO_APELLIDO%TYPE 
, P_TELEFONO IN EMPLEADO.TELEFONO%TYPE 
, P_FECHA_NACIMIENTO IN EMPLEADO.FECHA_NACIMIENTO%TYPE 
, P_CORREO_SECUNDARIO IN EMPLEADO.CORREO_SECUNDARIO%TYPE 
, P_CALLE IN EMPLEADO.CALLE%TYPE 
, P_AVENIDA IN EMPLEADO.AVENIDA%TYPE 
, P_CIUDAD IN EMPLEADO.CIUDAD%TYPE 
, P_CASA_NO IN EMPLEADO.CASA_NO%TYPE 
, P_REFERENCIA IN EMPLEADO.REFERENCIA%TYPE 
) AS 
BEGIN
  INSERT INTO EMPLEADO (CODIGO_EMPLEADO,ID_USUARIO,PRIMER_NOMBRE,SEGUNDO_NOMBRE,PRIMER_APELLIDO,
                        SEGUNDO_APELLIDO,TELEFONO,FECHA_NACIMIENTO,CORREO_SECUNDARIO,CALLE,
                        AVENIDA,CIUDAD,CASA_NO,REFERENCIA)
  VALUES(P_CODIGO_EMPLEADO, P_ID_USUARIO , P_PRIMER_NOMBRE, P_SEGUNDO_NOMBRE, P_PRIMER_APELLIDO
        , P_SEGUNDO_APELLIDO, P_TELEFONO, P_FECHA_NACIMIENTO, P_CORREO_SECUNDARIO, P_CALLE, P_AVENIDA
        , P_CIUDAD, P_CASA_NO, P_REFERENCIA);
            
  COMMIT;
END SP_EMPLEADO_CREATE;

--------------------------------------------------------
--  DDL for Procedure SP_EMPLEADO_UPDATE
--------------------------------------------------------
CREATE OR REPLACE PROCEDURE SP_EMPLEADO_UPDATE 
(
  P_CODIGO_EMPLEADO IN EMPLEADO.CODIGO_EMPLEADO%TYPE 
, P_ID_USUARIO IN EMPLEADO.ID_USUARIO%TYPE 
, P_PRIMER_NOMBRE IN EMPLEADO.PRIMER_NOMBRE%TYPE 
, P_SEGUNDO_NOMBRE IN EMPLEADO.SEGUNDO_NOMBRE%TYPE 
, P_PRIMER_APELLIDO IN EMPLEADO.PRIMER_APELLIDO%TYPE 
, P_SEGUNDO_APELLIDO IN EMPLEADO.SEGUNDO_APELLIDO%TYPE 
, P_TELEFONO IN EMPLEADO.TELEFONO%TYPE 
, P_FECHA_NACIMIENTO IN EMPLEADO.FECHA_NACIMIENTO%TYPE 
, P_CORREO_SECUNDARIO IN EMPLEADO.CORREO_SECUNDARIO%TYPE 
, P_CALLE IN EMPLEADO.CALLE%TYPE 
, P_AVENIDA IN EMPLEADO.AVENIDA%TYPE 
, P_CIUDAD IN EMPLEADO.CIUDAD%TYPE 
, P_CASA_NO IN EMPLEADO.CASA_NO%TYPE 
, P_REFERENCIA IN EMPLEADO.REFERENCIA%TYPE 
) AS 
BEGIN
  UPDATE EMPLEADO SET
    ID_USUARIO = P_ID_USUARIO,
    PRIMER_NOMBRE = P_ID_USUARIO,
    SEGUNDO_NOMBRE = P_SEGUNDO_NOMBRE,
    PRIMER_APELLIDO = P_PRIMER_APELLIDO,
    SEGUNDO_APELLIDO = P_SEGUNDO_APELLIDO,
    TELEFONO = P_TELEFONO,
    FECHA_NACIMIENTO = P_FECHA_NACIMIENTO,
    CORREO_SECUNDARIO = P_CORREO_SECUNDARIO,
    CALLE = P_CALLE,
    AVENIDA = P_AVENIDA,
    CIUDAD = P_CIUDAD,
    CASA_NO = P_CASA_NO,
    REFERENCIA = P_REFERENCIA
  WHERE
    CODIGO_EMPLEADO = P_CODIGO_EMPLEADO;
END SP_EMPLEADO_UPDATE;

--------------------------------------------------------
--  DDL for Procedure SP_EMPLEADO_READ
--------------------------------------------------------
CREATE OR REPLACE PROCEDURE SP_EMPLEADO_READ ( P_CODIGO_EMPLEADO IN EMPLEADO.CODIGO_EMPLEADO%TYPE , cRETURN OUT SYS_REFCURSOR) AS 
BEGIN
  OPEN cRETURN FOR
  SELECT CODIGO_EMPLEADO, ID_USUARIO, PRIMER_NOMBRE, SEGUNDO_NOMBRE, PRIMER_APELLIDO, SEGUNDO_APELLIDO, TELEFONO, FECHA_NACIMIENTO,
          CORREO_SECUNDARIO, CALLE, AVENIDA, CIUDAD, CASA_NO, REFERENCIA
  FROM EMPLEADO 
  WHERE CODIGO_EMPLEADO LIKE P_CODIGO_EMPLEADO;
END SP_EMPLEADO_READ;

--------------------------------------------------------
--  DDL for Procedure SP_EMPLEADO_DELETE
--------------------------------------------------------
CREATE OR REPLACE PROCEDURE SP_EMPLEADO_DELETE 
(
  P_CODIGO_EMPLEADO IN EMPLEADO.CODIGO_EMPLEADO%TYPE
) AS 
BEGIN
  DELETE FROM EMPLEADO
  WHERE CODIGO_EMPLEADO = P_CODIGO_EMPLEADO;
END SP_EMPLEADO_DELETE;

--------------------------------------------------------
--  CREATE TYPE T_EMPLEADO_ROW AND T_EMPLEADO AS TABLE
--------------------------------------------------------
CREATE OR REPLACE TYPE T_EMPLEADO_ROW AS OBJECT 
(
  CODIGO_EMPLEADO NUMBER
, ID_USUARIO VARCHAR2(50)
, PRIMER_NOMBRE VARCHAR2(50) 
, SEGUNDO_NOMBRE VARCHAR2(50) 
, PRIMER_APELLIDO VARCHAR2(50) 
, SEGUNDO_APELLIDO VARCHAR2(50) 
, TELEFONO NUMBER 
, FECHA_NACIMIENTO DATE 
, CORREO_SECUNDARIO VARCHAR2(50) 
, CALLE NUMBER
, AVENIDA VARCHAR2(50) 
, CIUDAD VARCHAR2(50) 
, CASA_NO NUMBER
, REFERENCIA VARCHAR2(50) 
)

CREATE OR REPLACE TYPE T_EMPLEADO 
AS TABLE OF T_EMPLEADO_ROW;

--------------------------------------------------------
--  CREATE READ AS FUNCTION PIPELINED
--------------------------------------------------------
CREATE OR REPLACE FUNCTION FN_EMPLEADO_READ 
(
  P_CODIGO_EMPLEADO IN EMPLEADO.CODIGO_EMPLEADO%TYPE 
) RETURN T_EMPLEADO PIPELINED AS 
BEGIN
  FOR cReg IN (SELECT * FROM EMPLEADO WHERE CODIGO_EMPLEADO LIKE P_CODIGO_EMPLEADO) LOOP
    PIPE ROW(T_EMPLEADO_ROW(cReg.CODIGO_EMPLEADO, cReg.ID_USUARIO, cReg.PRIMER_NOMBRE, cReg.SEGUNDO_NOMBRE, cReg.PRIMER_APELLIDO
            , cReg.SEGUNDO_APELLIDO, cReg.TELEFONO , cReg.FECHA_NACIMIENTO , cReg.CORREO_SECUNDARIO, cReg.CALLE , cReg.AVENIDA, cReg.CIUDAD , cReg.CASA_NO, cReg.REFERENCIA));
  END LOOP;
  RETURN;
END FN_EMPLEADO_READ;